{
  "openapi": "3.0.1",
  "info": {
    "title": "ATLAS soil_sampling Service Template API",
    "version": "0.0.1"
  },
  "externalDocs": {
    "description": "Service Template Document",
    "url": "https://htmlpreview.github.io/?https://github.com/atlasH2020-templates/soil_sampling/blob/v0/doc.html"
  },
  "servers": [
    {
      "url": "https://<domain>/<path>"
    }
  ],
  "tags": [
    {
      "name": "Orders",
      "description": "Customer API"
    },
    {
      "name": "Sampling Jobs",
      "description": "Soil Sampler API"
    }
  ],
  "paths": {
    "/orders": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "summary": "Order soil analyses (order).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              },
              "example": {
                "customer_name": "ACME Corp.",
                "fields": [
                  {
                    "field_urn": "urn:com.agricircle.atlas.field_data:fdbe6f55-6179-4b88-9177-4afbed33adac",
                    "sampling_depth": 30,
                    "sampling_zones": {
                      "type": "FeatureCollection",
                      "features": [
                        {
                          "type": "Feature",
                          "properties": {
                            "id": "XHHW_1"
                          },
                          "geometry": {
                            "type": "Polygon",
                            "coordinates": [
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "id": "XHHW_2"
                          },
                          "geometry": {
                            "type": "Polygon",
                            "coordinates": [
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "id": "XHHW_3"
                          },
                          "geometry": {
                            "type": "Polygon",
                            "coordinates": [
                            ]
                          }
                        }
                      ]
                    },
                    "stitches": {
                      "type": "FeatureCollection",
                      "features": [
                        {
                          "type": "Feature",
                          "properties": {
                            "name": "Stitches for XHHW_1"
                          },
                          "geometry": {
                            "type": "MultiPoint",
                            "coordinates": [
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "name": "Stitches for XHHW_2"
                          },
                          "geometry": {
                            "type": "MultiPoint",
                            "coordinates": [
                            ]
                          }
                        },
                        {
                          "type": "Feature",
                          "properties": {
                            "name": "Stitches for XHHW_3"
                          },
                          "geometry": {
                            "type": "MultiPoint",
                            "coordinates": [
                            ]
                          }
                        }
                      ]
                    },
                    "lab_measurements": [
                      "K2O",
                      "P2O5",
                      "K2O",
                      "soc"
                    ],
                    "infield_measurements": [
                      "auger_diameter"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "example": {
                    "id": "1e371d44-59ae-4af1-9570-9743dd3ba613"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or missing parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "1e371d44-59ae-4af1-9570-9743dd3ba613"
        }
      ],
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "summary": "Retrieve an order status (order_status).",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/OrderStatus"
                    },
                    "info": {
                      "type": "string",
                      "description": "Human-readable info"
                    },
                    "user_url": {
                      "type": "string",
                      "format": "uri",
                      "description": "A service's proprietary UI url where the user may navigate to view additional information or be prompted for additional inputs. A well-behaved FMIS will present his users with a visual indication and the means to click on this link when this attribute is present."
                    }
                  },
                  "required": [
                    "status"
                  ]
                },
                "example": {
                  "status": "LAB_ANALYSIS_IN_PROGRESS",
                  "info": "Sent to lab on 2023-02-12"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "summary": "Cancel an existing order (cancel_order).",
        "responses": {
          "204": {
            "description": "Successful operation."
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}/results": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "1e371d44-59ae-4af1-9570-9743dd3ba613"
        }
      ],
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "summary": "Retrieve an order's results (order_results).",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabResults"
                },
                "example": {
                  "sampling_date": "2023-03-01T17:20:43.413Z",
                  "analysis_date": "2023-03-07T17:20:43.413Z",
                  "fields": [
                    {
                      "field_urn": "urn:com.agricircle.atlas.field_data:fdbe6f55-6179-4b88-9177-4afbed33adac",
                      "zones": [
                        {
                          "zone_id": "",
                          "lab_results": [],
                          "infield_results": []
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/sampling_jobs": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Sampling Jobs"
        ],
        "summary": "Fetch soil sampling jobs to be performed (sampling_jobs).",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SamplingJobSummary"
                  }
                },
                "example": [
                  {
                    "id": "1e371d44-59ae-4af1-9570-9743dd3ba613",
                    "status": "PENDING",
                    "date": "2022-08-15T14:32:28Z",
                    "customer_name": "ACME Corp.",
                    "customer_address": "Kastelhof 4242, 8155 Niederhasli",
                    "total_zones": 15,
                    "total_stitches": 300
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Invalid or missing parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/sampling_jobs/{id}": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Sampling Jobs"
        ],
        "summary": "Cancel an a soil sampling activity (started or not), in case of force majeure (cancel_sampling_job). A canceled job will no longer be accessible to the soil sampler.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1e371d44-59ae-4af1-9570-9743dd3ba613"
          }
        ],
        "requestBody": {
          "description": "An optional explanation for the cancellation.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful operation."
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/sampling_jobs/{id}/acquire": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "1e371d44-59ae-4af1-9570-9743dd3ba613"
        }
      ],
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Sampling Jobs"
        ],
        "summary": "Start sampling job (acquire_sampling_job).",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SamplingJob"
                },
                "example": {
                  "id": "1e371d44-59ae-4af1-9570-9743dd3ba613",
                  "customer_name": "ACME Corp.",
                  "fields": [
                    {
                      "field_urn": "urn:com.agricircle.atlas.field_data:fdbe6f55-6179-4b88-9177-4afbed33adac",
                      "field_name": "Am Bach",
                      "field_boundaries": {
                        "type": "Polygon",
                        "coordinates": []
                      },
                      "sampling_depth": 30,
                      "sampling_zones": {
                        "type": "FeatureCollection",
                        "features": [
                          {
                            "type": "Feature",
                            "properties": {
                              "id": "XHHW_1"
                            },
                            "geometry": {
                              "type": "Polygon",
                              "coordinates": [
                              ]
                            }
                          },
                          {
                            "type": "Feature",
                            "properties": {
                              "id": "XHHW_2"
                            },
                            "geometry": {
                              "type": "Polygon",
                              "coordinates": [
                              ]
                            }
                          },
                          {
                            "type": "Feature",
                            "properties": {
                              "id": "XHHW_3"
                            },
                            "geometry": {
                              "type": "Polygon",
                              "coordinates": [
                              ]
                            }
                          }
                        ]
                      },
                      "stitches": {
                        "type": "FeatureCollection",
                        "features": [
                          {
                            "type": "Feature",
                            "properties": {
                              "name": "Stitches for XHHW_1"
                            },
                            "geometry": {
                              "type": "MultiPoint",
                              "coordinates": [
                              ]
                            }
                          },
                          {
                            "type": "Feature",
                            "properties": {
                              "name": "Stitches for XHHW_2"
                            },
                            "geometry": {
                              "type": "MultiPoint",
                              "coordinates": [
                              ]
                            }
                          },
                          {
                            "type": "Feature",
                            "properties": {
                              "name": "Stitches for XHHW_3"
                            },
                            "geometry": {
                              "type": "MultiPoint",
                              "coordinates": [
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "infield_measurements": [
                    "auger_diameter"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Sampling Jobs"
        ],
        "summary": "Release a previously acquired sampling job, in case of postponement (release_sampling_job).",
        "responses": {
          "204": {
            "description": "Successful operation."
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/sampling_jobs/{id}/complete": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Sampling Jobs"
        ],
        "summary": "Complete a soil sampling activity (complete_sampling_job).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1e371d44-59ae-4af1-9570-9743dd3ba613"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field_urn": {
                          "$ref": "#/components/schemas/FieldURN"
                        },
                        "sampling_bags": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "zone_id": {
                                "type": "string"
                              },
                              "bag_id": {
                                "type": "string",
                                "description": "ID of the bag containing the sample. If not provided, then the zone_id MUST be written on the bag."
                              },
                              "infield_results": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "measurement": {
                                      "$ref": "#/components/schemas/InfieldMeasurement"
                                    },
                                    "value": {
                                      "type": "number"
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "zone_id"
                            ]
                          }
                        }
                      },
                      "required": [
                        "field_urn",
                        "sampling_bags"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a printable shipping list document (text, pdf, xlsx, docx, ...) containing the shipping address and the description of the bags to be shipped.",
            "content": {
              "text": {
              },
              "application/pdf": {
              },
              "<xlsx,docx,...>": {
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "customer_name": {
            "type": "string"
          },
          "customer_address": {
            "type": "string"
          },
          "notification_url": {
            "type": "string",
            "format": "uri",
            "description": "When present, this URL will be invoked with POST containing a 'Notification' body (see components) when applicable. Note that the notification_url MUST NOT require authentication and therefore MUST not be easily guessable (i.e., include a random parameter)."
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field_urn": {
                  "$ref": "#/components/schemas/FieldURN"
                },
                "sampling_depth": {
                  "description": "Depth in centimeter of the sampling.",
                  "type": "number"
                },
                "sampling_zones": {
                  "type": "object",
                  "description": "GeoJSON FeatureCollection of Polygon features. Note that a 'zone_id' property for each zone feature is mandatory and must be unique within the order. An optional bag_id property may be supplied for pre-labeled bags."
                },
                "stitches": {
                  "type": "object",
                  "description": "GeoJSON FeatureCollection of MultiPoint features. Each multipoint corresponds to a sampling zone."
                },
                "lab_measurements": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabMeasurement"
                  }
                },
                "infield_measurements": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InfieldMeasurement"
                  }
                },
                "additional_info_url": {
                  "type": "string",
                  "format": "uri",
                  "description": "Optional browser url (provided by the orchestrating ADIS) that can be used to provide the sampler with additional data or instructions. These URLs MUST make it possible to identify the original order and MUST be signed to avoid forgery. Authentication MUST NOT be required to access such a URL."
                }
              },
              "required": [
                "field_urn",
                "sampling_depth",
                "sampling_zones",
                "stitches"
              ]
            }
          }
        },
        "required": [
          "customer_name",
          "fields"
        ]
      },
      "LabMeasurement": {
        "description": "Standardized soil properties to be analyzed in a laboratory.",
        "type": "string",
        "enum": [
          "clay",
          "silt",
          "sand",
          "humus",
          "CaCO3",
          "K2O",
          "P2O5",
          "N",
          "CaCl2",
          "N",
          "B",
          "CaO",
          "Cu",
          "MgO",
          "Mn",
          "Na",
          "S",
          "Zn",
          "N_min",
          "C/N",
          "cec",
          "soc",
          "bulk_density",
          "weight_sample",
          "weight_dried_sample"
        ]
      },
      "InfieldMeasurement": {
        "type": "string",
        "enum": [
          "auger_diameter",
          "weight_bagged_sample",
          "weight_collected_sample"
        ]
      },
      "SamplingJobSummary": {
        "description": "Besides the id and status, all the other attributes are provided for informational purposes to enable the sampler to prioritize his work without having to acquire the job to get details",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "ACQUIRED"
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 date/time at which the order was placed."
          },
          "customer_name": {
            "type": "string"
          },
          "customer_address": {
            "type": "string"
          },
          "total_zones": {
            "type": "number",
            "description": "The sum of all sampling zones on all fields to be sampled within a job.."
          },
          "total_stitches": {
            "type": "number",
            "description": "The sum of all stitches for all zones on all fields to be sampled within a job."
          },
          "infield_measurements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InfieldMeasurement"
            },
            "description": "In field measurements requested on at least some of the fields within a job."
          }
        },
        "required": [
          "id",
          "status",
          "date",
          "customer_name",
          "customer_address",
          "total_zones",
          "total_stitches"
        ]
      },
      "SamplingJob": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 date/time at which the order was placed."
          },
          "customer_name": {
            "type": "string"
          },
          "customer_address": {
            "type": "string"
          },
          "instructions": {
            "type": "string",
            "description": "Additional human-readable information. Could be used to provide details about bagging method/labelling, shipping details, etc."
          },
          "additional_info_url": {
            "type": "string",
            "format": "uri",
            "description": "Optional browser url (provided by the orchestrating ADIS) that can be used to provide the sampler with additional data or instructions for the sampling process. These URLs are signed to avoid forgery, and require no additional HTTP Authentication as they are 'unguessable'."
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field_urn": {
                  "$ref": "#/components/schemas/FieldURN"
                },
                "field_name": {
                  "type": "string"
                },
                "field_boundaries": {
                  "description": "GeoJSON Polygon.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "pattern": "^Polygon$"
                    },
                    "coordinates": {
                      "type": "array",
                      "items": {}
                    }
                  }
                },
                "sampling_depth": {
                  "description": "Depth in centimeter of the sampling.",
                  "type": "number"
                },
                "sampling_zones": {
                  "type": "object",
                  "description": "GeoJSON FeatureCollection of Polygon features. Note that the 'id' property for each zone feature is mandatory and must be unique within the order. An optional bag_id property may be supplied for pre-labeled bags."
                },
                "stitches": {
                  "type": "object",
                  "description": "GeoJSON FeatureCollection of MultiPoint features. Each multipoint corresponds to a sampling zone."
                },
                "infield_measurements": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InfieldMeasurement"
                  }
                }
              },
              "required": [
                "field_urn",
                "field_name",
                "field_boundaries",
                "sampling_depth",
                "sampling_zones",
                "stitches"
              ]
            }
          }
        },
        "required": [
          "id",
          "customer_name",
          "customer_address",
          "fields"
        ]
      },
      "LabResults": {
        "type": "object",
        "properties": {
          "sampling_date": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 date/time at which the soil samples collection was completed."
          },
          "analysis_date": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 date/time at which the analysis was completed."
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field_urn": {
                  "$ref": "#/components/schemas/FieldURN"
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Each id in the 'result' zones MUST have a corresponding if in the order zones."
                      },
                      "lab_results": {
                        "description": "Measurements resulting from laboratory analysis of samples.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "measurement": {
                              "$ref": "#/components/schemas/LabMeasurement"
                            },
                            "measurement_method": {
                              "type": "string",
                              "enum": [
                                "H2O",
                                "CaCl2",
                                "CAL",
                                "Mehlich3"
                              ]
                            },
                            "value": {
                              "type": "number",
                              "description": "Measured value. Lab measurement values MUST be in a well-known unit that is described in the soil_sampling service template document."
                            }
                          }
                        }
                      },
                      "infield_results": {
                        "description": "Measurements resulting from samplers during the sampling process.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "measurement": {
                              "$ref": "#/components/schemas/InfieldMeasurement"
                            },
                            "value": {
                              "type": "number",
                              "description": "Measured value. Infield measurement values MUST be in a well-known unit that is described in the soil_sampling service template document."
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "field_urn",
                "zones"
              ]
            }
          }
        },
        "required": [
          "sampling_date",
          "analysis_date",
          "fields"
        ]
      },
      "OrderStatus": {
        "type": "string",
        "enum": [
          "PENDING",
          "SOIL_SAMPLING_IN_PROGRESS",
          "LAB_ANALYSIS_IN_PROGRESS",
          "CONFIGURATION_REQUIRED",
          "READY",
          "FAILED"
        ],
        "description": "Status of an order."
      },
      "Notification": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "SOIL_SAMPLING_IN_PROGRESS",
              "LAB_ANALYSIS_IN_PROGRESS",
              "CONFIGURATION_REQUIRED",
              "READY",
              "FAILED"
            ],
            "description": "Status of an order."
          }
        },
        "required": [
          "order_id",
          "status"
        ]
      },
      "FieldURN": {
        "type": "string",
        "pattern": "^urn:[a-z][a-z0-9_.\\-]*:[\\w-.]+",
        "description": "Uniform resource name of a field with the syntax `urn:<service_id>:<internal_id>`. <service_id> must be the id of a valid and active ATLAS service."
      },
      "DetailedError": {
        "type": "object",
        "description": "This defines the structure of an error payload when one is present. Actual messages and additional error information content may change from one implementation to another.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error description."
          },
          "status": {
            "type": "string",
            "format": "number",
            "description": "HTTP error code."
          },
          "error_url": {
            "type": "string",
            "format": "uri",
            "description": "A service's proprietary UI url where the user may navigate to view additional information or be prompted for additional actions to deal with the error. A well-behaved FMIS will present his users with a visual indication and the means to click on this link when this attribute is present."
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional detailed information."
          }
        },
        "required": [
          "message"
        ],
        "example": {
          "message": "this is a sample error message",
          "errors": [
            "this is an example of additional error information"
          ]
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
